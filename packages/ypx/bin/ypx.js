#!/usr/bin/env node

var _index = _interopRequireDefault(require("../index"));

var _util = require("util");

var _bluebird = _interopRequireDefault(require("bluebird"));

var _updateNotifier = _interopRequireDefault(require("@yarn-tool/update-notifier"));

var _argv = _interopRequireDefault(require("../lib/argv"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

let inputArgv = process.argv.slice(2);
(0, _updateNotifier.default)([__dirname, '..']);
let argv = (0, _argv.default)(inputArgv);

if (argv.debugBin) {
  console.log(__filename);
  process.exit();
}

let {
  p = []
} = argv;

if (!p || !p.length) {
  if (argv._.length !== 1) {
    throw new Error(`current not support this syntax, ${(0, _util.inspect)(argv)}`);
  } else {
    p = [argv._.shift()];
  }
}

if (argv._.length && argv['--'].length) {
  throw new Error(`current not support this syntax, ${inputArgv}`);
}

_bluebird.default.resolve((0, _index.default)({ ...argv,
  package: p
}, inputArgv)).tapCatch(e => {});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInlweC50cyJdLCJuYW1lcyI6WyJpbnB1dEFyZ3YiLCJwcm9jZXNzIiwiYXJndiIsInNsaWNlIiwiX19kaXJuYW1lIiwiZGVidWdCaW4iLCJjb25zb2xlIiwibG9nIiwiX19maWxlbmFtZSIsImV4aXQiLCJwIiwibGVuZ3RoIiwiXyIsIkVycm9yIiwic2hpZnQiLCJCbHVlYmlyZCIsInJlc29sdmUiLCJwYWNrYWdlIiwidGFwQ2F0Y2giLCJlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDQyxJQUFSLENBQWFDLEtBQWIsQ0FBbUIsQ0FBbkIsQ0FBaEI7QUFFQSw2QkFBZSxDQUFDQyxTQUFELEVBQVksSUFBWixDQUFmO0FBRUEsSUFBSUYsSUFBSSxHQUFHLG1CQUFVRixTQUFWLENBQVg7O0FBRUEsSUFBSUUsSUFBSSxDQUFDRyxRQUFULEVBQ0E7QUFDQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQVo7QUFDQVAsRUFBQUEsT0FBTyxDQUFDUSxJQUFSO0FBQ0E7O0FBRUQsSUFBSTtBQUFFQyxFQUFBQSxDQUFDLEdBQUc7QUFBTixJQUFhUixJQUFqQjs7QUFJQSxJQUFJLENBQUNRLENBQUQsSUFBTSxDQUFDQSxDQUFDLENBQUNDLE1BQWIsRUFDQTtBQUNDLE1BQUlULElBQUksQ0FBQ1UsQ0FBTCxDQUFPRCxNQUFQLEtBQWtCLENBQXRCLEVBQ0E7QUFDQyxVQUFNLElBQUlFLEtBQUosQ0FBVyxvQ0FBbUMsbUJBQVFYLElBQVIsQ0FBYyxFQUE1RCxDQUFOO0FBQ0EsR0FIRCxNQUtBO0FBQ0NRLElBQUFBLENBQUMsR0FBRyxDQUFDUixJQUFJLENBQUNVLENBQUwsQ0FBT0UsS0FBUCxFQUFELENBQUo7QUFDQTtBQUNEOztBQUVELElBQUlaLElBQUksQ0FBQ1UsQ0FBTCxDQUFPRCxNQUFQLElBQWlCVCxJQUFJLENBQUMsSUFBRCxDQUFKLENBQVdTLE1BQWhDLEVBQ0E7QUFDQyxRQUFNLElBQUlFLEtBQUosQ0FBVyxvQ0FBbUNiLFNBQVUsRUFBeEQsQ0FBTjtBQUNBOztBQUVEZSxrQkFBU0MsT0FBVCxDQUFpQixvQkFBSSxFQUNuQixHQUFHZCxJQURnQjtBQUVuQmUsRUFBQUEsT0FBTyxFQUFFUDtBQUZVLENBQUosRUFHYlYsU0FIYSxDQUFqQixFQUlFa0IsUUFKRixDQUlXQyxDQUFDLElBQUksQ0FFZCxDQU5GIiwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuXG5pbXBvcnQgWVBYIGZyb20gJy4uL2luZGV4JztcbmltcG9ydCB7IGluc3BlY3QgfSBmcm9tICd1dGlsJ1xuaW1wb3J0IEJsdWViaXJkIGZyb20gJ2JsdWViaXJkJztcbmltcG9ydCB1cGRhdGVOb3RpZmllciBmcm9tICdAeWFybi10b29sL3VwZGF0ZS1ub3RpZmllcic7XG5pbXBvcnQgcGFyc2VBcmd2IGZyb20gJy4uL2xpYi9hcmd2JztcblxubGV0IGlucHV0QXJndiA9IHByb2Nlc3MuYXJndi5zbGljZSgyKTtcblxudXBkYXRlTm90aWZpZXIoW19fZGlybmFtZSwgJy4uJ10pO1xuXG5sZXQgYXJndiA9IHBhcnNlQXJndihpbnB1dEFyZ3YpO1xuXG5pZiAoYXJndi5kZWJ1Z0Jpbilcbntcblx0Y29uc29sZS5sb2coX19maWxlbmFtZSk7XG5cdHByb2Nlc3MuZXhpdCgpO1xufVxuXG5sZXQgeyBwID0gW10gfSA9IGFyZ3YgYXMgdHlwZW9mIGFyZ3YgJiB7XG5cdHA6IHN0cmluZ1tdLFxufTtcblxuaWYgKCFwIHx8ICFwLmxlbmd0aClcbntcblx0aWYgKGFyZ3YuXy5sZW5ndGggIT09IDEpXG5cdHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoYGN1cnJlbnQgbm90IHN1cHBvcnQgdGhpcyBzeW50YXgsICR7aW5zcGVjdChhcmd2KX1gKVxuXHR9XG5cdGVsc2Vcblx0e1xuXHRcdHAgPSBbYXJndi5fLnNoaWZ0KCldO1xuXHR9XG59XG5cbmlmIChhcmd2Ll8ubGVuZ3RoICYmIGFyZ3ZbJy0tJ10ubGVuZ3RoKVxue1xuXHR0aHJvdyBuZXcgRXJyb3IoYGN1cnJlbnQgbm90IHN1cHBvcnQgdGhpcyBzeW50YXgsICR7aW5wdXRBcmd2fWApXG59XG5cbkJsdWViaXJkLnJlc29sdmUoWVBYKHtcblx0XHQuLi5hcmd2LFxuXHRcdHBhY2thZ2U6IHAsXG5cdH0sIGlucHV0QXJndikpXG5cdC50YXBDYXRjaChlID0+IHtcblxuXHR9KVxuO1xuIl19