#!/usr/bin/env node

var _index = _interopRequireDefault(require("../index"));

var _util = require("util");

var _bluebird = _interopRequireDefault(require("bluebird"));

var _updateNotifier = _interopRequireDefault(require("@yarn-tool/update-notifier"));

var _argv = _interopRequireDefault(require("../lib/argv"));

var _err = require("../lib/err");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

let inputArgv = process.argv.slice(2);
(0, _updateNotifier.default)([__dirname, '..']);
let argv = (0, _argv.default)(inputArgv);

if (argv.debugBin) {
  console.log(__filename);
  process.exit();
}

let {
  p = []
} = argv;

if (!p || !p.length) {
  if (argv._.length !== 1) {
    throw new Error(`current not support this syntax, ${(0, _util.inspect)(argv)}`);
  } else {
    p = [argv._.shift()];
  }
}

if (argv._.length && argv['--'].length) {
  throw new Error(`current not support this syntax, ${inputArgv}`);
}

_bluebird.default.resolve(() => (0, _index.default)({ ...argv,
  package: p
}, inputArgv)).catch(_err.YpxError, e => {
  process.exit(e.exitCode);
}).tap(e => {
  if (e && e instanceof _err.YpxError) {
    process.exit(e.exitCode);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInlweC50cyJdLCJuYW1lcyI6WyJpbnB1dEFyZ3YiLCJwcm9jZXNzIiwiYXJndiIsInNsaWNlIiwiX19kaXJuYW1lIiwiZGVidWdCaW4iLCJjb25zb2xlIiwibG9nIiwiX19maWxlbmFtZSIsImV4aXQiLCJwIiwibGVuZ3RoIiwiXyIsIkVycm9yIiwic2hpZnQiLCJCbHVlYmlyZCIsInJlc29sdmUiLCJwYWNrYWdlIiwiY2F0Y2giLCJZcHhFcnJvciIsImUiLCJleGl0Q29kZSIsInRhcCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQ0MsSUFBUixDQUFhQyxLQUFiLENBQW1CLENBQW5CLENBQWhCO0FBRUEsNkJBQWUsQ0FBQ0MsU0FBRCxFQUFZLElBQVosQ0FBZjtBQUVBLElBQUlGLElBQUksR0FBRyxtQkFBVUYsU0FBVixDQUFYOztBQUVBLElBQUlFLElBQUksQ0FBQ0csUUFBVCxFQUNBO0FBQ0NDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxVQUFaO0FBQ0FQLEVBQUFBLE9BQU8sQ0FBQ1EsSUFBUjtBQUNBOztBQUVELElBQUk7QUFBRUMsRUFBQUEsQ0FBQyxHQUFHO0FBQU4sSUFBYVIsSUFBakI7O0FBSUEsSUFBSSxDQUFDUSxDQUFELElBQU0sQ0FBQ0EsQ0FBQyxDQUFDQyxNQUFiLEVBQ0E7QUFDQyxNQUFJVCxJQUFJLENBQUNVLENBQUwsQ0FBT0QsTUFBUCxLQUFrQixDQUF0QixFQUNBO0FBQ0MsVUFBTSxJQUFJRSxLQUFKLENBQVcsb0NBQW1DLG1CQUFRWCxJQUFSLENBQWMsRUFBNUQsQ0FBTjtBQUNBLEdBSEQsTUFLQTtBQUNDUSxJQUFBQSxDQUFDLEdBQUcsQ0FBQ1IsSUFBSSxDQUFDVSxDQUFMLENBQU9FLEtBQVAsRUFBRCxDQUFKO0FBQ0E7QUFDRDs7QUFFRCxJQUFJWixJQUFJLENBQUNVLENBQUwsQ0FBT0QsTUFBUCxJQUFpQlQsSUFBSSxDQUFDLElBQUQsQ0FBSixDQUFXUyxNQUFoQyxFQUNBO0FBQ0MsUUFBTSxJQUFJRSxLQUFKLENBQVcsb0NBQW1DYixTQUFVLEVBQXhELENBQU47QUFDQTs7QUFFRGUsa0JBQVNDLE9BQVQsQ0FBaUIsTUFBTSxvQkFBSSxFQUN6QixHQUFHZCxJQURzQjtBQUV6QmUsRUFBQUEsT0FBTyxFQUFFUDtBQUZnQixDQUFKLEVBR25CVixTQUhtQixDQUF2QixFQUlFa0IsS0FKRixDQUlRQyxhQUpSLEVBSW1CQyxDQUFELElBQU87QUFDdkJuQixFQUFBQSxPQUFPLENBQUNRLElBQVIsQ0FBYVcsQ0FBQyxDQUFDQyxRQUFmO0FBQ0EsQ0FORixFQU9FQyxHQVBGLENBT09GLENBQUQsSUFBTztBQUNYLE1BQUlBLENBQUMsSUFBSUEsQ0FBQyxZQUFZRCxhQUF0QixFQUNBO0FBQ0NsQixJQUFBQSxPQUFPLENBQUNRLElBQVIsQ0FBYVcsQ0FBQyxDQUFDQyxRQUFmO0FBQ0E7QUFDRCxDQVpGIiwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuXG5pbXBvcnQgWVBYIGZyb20gJy4uL2luZGV4JztcbmltcG9ydCB7IGluc3BlY3QgfSBmcm9tICd1dGlsJ1xuaW1wb3J0IEJsdWViaXJkIGZyb20gJ2JsdWViaXJkJztcbmltcG9ydCB1cGRhdGVOb3RpZmllciBmcm9tICdAeWFybi10b29sL3VwZGF0ZS1ub3RpZmllcic7XG5pbXBvcnQgcGFyc2VBcmd2IGZyb20gJy4uL2xpYi9hcmd2JztcbmltcG9ydCB7IFlweEVycm9yIH0gZnJvbSAnLi4vbGliL2Vycic7XG5cbmxldCBpbnB1dEFyZ3YgPSBwcm9jZXNzLmFyZ3Yuc2xpY2UoMik7XG5cbnVwZGF0ZU5vdGlmaWVyKFtfX2Rpcm5hbWUsICcuLiddKTtcblxubGV0IGFyZ3YgPSBwYXJzZUFyZ3YoaW5wdXRBcmd2KTtcblxuaWYgKGFyZ3YuZGVidWdCaW4pXG57XG5cdGNvbnNvbGUubG9nKF9fZmlsZW5hbWUpO1xuXHRwcm9jZXNzLmV4aXQoKTtcbn1cblxubGV0IHsgcCA9IFtdIH0gPSBhcmd2IGFzIHR5cGVvZiBhcmd2ICYge1xuXHRwOiBzdHJpbmdbXSxcbn07XG5cbmlmICghcCB8fCAhcC5sZW5ndGgpXG57XG5cdGlmIChhcmd2Ll8ubGVuZ3RoICE9PSAxKVxuXHR7XG5cdFx0dGhyb3cgbmV3IEVycm9yKGBjdXJyZW50IG5vdCBzdXBwb3J0IHRoaXMgc3ludGF4LCAke2luc3BlY3QoYXJndil9YClcblx0fVxuXHRlbHNlXG5cdHtcblx0XHRwID0gW2FyZ3YuXy5zaGlmdCgpXTtcblx0fVxufVxuXG5pZiAoYXJndi5fLmxlbmd0aCAmJiBhcmd2WyctLSddLmxlbmd0aClcbntcblx0dGhyb3cgbmV3IEVycm9yKGBjdXJyZW50IG5vdCBzdXBwb3J0IHRoaXMgc3ludGF4LCAke2lucHV0QXJndn1gKVxufVxuXG5CbHVlYmlyZC5yZXNvbHZlKCgpID0+IFlQWCh7XG5cdFx0Li4uYXJndixcblx0XHRwYWNrYWdlOiBwLFxuXHR9LCBpbnB1dEFyZ3YpKVxuXHQuY2F0Y2goWXB4RXJyb3IsIChlKSA9PiB7XG5cdFx0cHJvY2Vzcy5leGl0KGUuZXhpdENvZGUpO1xuXHR9KVxuXHQudGFwKChlKSA9PiB7XG5cdFx0aWYgKGUgJiYgZSBpbnN0YW5jZW9mIFlweEVycm9yKVxuXHRcdHtcblx0XHRcdHByb2Nlc3MuZXhpdChlLmV4aXRDb2RlKTtcblx0XHR9XG5cdH0pXG47XG4iXX0=